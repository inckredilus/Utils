#!/data/data/com.termux/files/usr/bin/bash
# =========================================================
# Smart BusyBox Web Launcher for Termux / Termux:Widget
# Features:
#   1. Remembers last used folder (busyboxdir.tmp)
#   2. Works both from terminal and from widget
#   3. Allows command-line arg for folder name
#   4. Prompts user if folder not known
#   5. Auto-selects available port and launches Chrome
# =========================================================

BASE_DIR=~/storage/shared/Prog/JavaScript
TMP_FILE=~/busyboxdir.tmp

# ---------- function: find free port ----------
find_free_port() {
    local port=8080
    while lsof -i :"$port" >/dev/null 2>&1; do
        port=$((port + 1))
    done
    echo "$port"
}

# ---------- determine environment ----------
# $TERMUX_WIDGET is set when running from Termux:Widget
if [ -n "$TERMUX_WIDGET" ]; then
    MODE="widget"
else
    MODE="terminal"
fi
echo "---- MODE ---- $MODE ------"
# ---------- obtain folder name ----------
get_folder() {
    local folder=""

    # 1) if argument supplied, use it
    if [ -n "$1" ]; then
        folder="$1"

    # 2) else if temp file exists and non-empty, use it
    elif [ -s "$TMP_FILE" ]; then
        folder=$(cat "$TMP_FILE")

    # 3) else prompt (depends on mode)
    else
        if [ "$MODE" = "terminal" ]; then
            read -rp "Enter folder name under $BASE_DIR: " folder
        else
            # Widget mode — use termux-dialog
            folder=$(termux-dialog text -t "Enter folder name under $BASE_DIR" | jq -r '.text')
        fi
    fi

    echo "$folder"
}

# ---------- main ----------
FOLDER_NAME=$(get_folder "$1")

# If still empty, exit gracefully
if [ -z "$FOLDER_NAME" ]; then
    echo "❌ No folder name provided. Exiting."
    exit 1
fi

# Save folder name for next run
echo "$FOLDER_NAME" > "$TMP_FILE"

TARGET_DIR="$BASE_DIR/$FOLDER_NAME"

# Check that folder exists
if [ ! -d "$TARGET_DIR" ]; then
    echo "❌ Folder not found: $TARGET_DIR"
    exit 1
fi

# Kill any existing httpd processes
pkill httpd 2>/dev/null

# Find a free port
PORT=$(find_free_port)

# Start BusyBox HTTP server in background
busybox httpd -p "$PORT" -h "$TARGET_DIR" &

# Wait briefly to ensure it starts
sleep 1

# Launch Chrome
am start -a android.intent.action.VIEW -d "http://127.0.0.1:$PORT"

# Feedback (visible in terminal or termux-toast)
MSG="Serving '$FOLDER_NAME' at http://127.0.0.1:$PORT"
if [ "$MODE" = "terminal" ]; then
    echo "$MSG"
else
    termux-toast "$MSG"
fi
